@using megazlo.Code
@model megazlo.Models.Post
@{
	SquishIt.JavaScript.Add("~/Scripts/jquery.validate.unobtrusive.min.js");
	SquishIt.JavaScript.Add("~/Scripts/jquery.validate.min.js");
	SquishIt.JavaScript.Add("~/Scripts/jquery.vtip.js");
	SquishIt.JavaScript.Add("~/Scripts/Ajax/SendComment.js");
}
<div class="post hentry">
	<h2 class="entry-title">
		<a href="@Url.RouteUrl("Post", new RouteValueDictionary { { "id", Model.WebLink } })" rel="bookmark">@Model.Title</a></h2>
	<div class="clearfix">
		@if (Model.IsShowInfo) {
			<div class="entry-meta entry-header">
				<span class="published">Автор <strong>@Model.User.FirstName @Model.User.SecondName</strong></span> <span class="published">
					От <strong>@Model.DatePost.ToShortDateString()</strong></span>
				@if (Model.IsCommentable) {
					<span class="comment-count">Комментарии <a href="@Url.RouteUrl("Post", new RouteValueDictionary { { "id", Model.WebLink } })#comments">
						@Model.Comment.Count</a></span>
		}
				<span class="permalink">→ <a class="vtip" href="@Url.Action("Post", new { id = Model.WebLink })">Ссылка</a></span>
			</div>
	}
		<div class="@Html.GetClassPost(Model.IsShowInfo)">
			@Html.Raw(Model.Text)
			@if (Request.IsAuthenticated /*User.IsInRole("Admin")*/) {
				<div>
					@Html.ActionLink("Редактировать", "EditNews", "Admin", new { id = Model.Id }, new { })
					|
					@Html.ActionLink("Удалить", "DeleteNews", "Admin", new { id = Model.Id }, new { })
				</div>
	 }
		</div>
	</div>
</div>
@if (Model.IsCommentable) {
	<div id="comment-wrap" class="clearfix">
		<div class="comments-sidebar">
			<h3 id="comments">
				Комментарии:</h3>
			<p>
				Есть что сказать? <span class="continue-reading"><a href="#newcomm">Оставьте комментарий</a></span></p>
		</div>
		<div class="commentlist">
			@using (Ajax.BeginForm("AddComment", "Home", null)) {
				<fieldset>
					<legend>Новый коментарий</legend>
					<p>
						@Html.LabelFor(model => model.NewComment.Email)
						@Html.EditorFor(model => model.NewComment.Email)
					</p>
					<p>
						@Html.LabelFor(model => model.NewComment.FirstName)
						@Html.EditorFor(model => model.NewComment.FirstName)
					</p>
					<p>
						@Html.LabelFor(model => model.NewComment.Text)
						@Html.TextAreaFor(model => model.NewComment.Text, new { rows = "3", cols = "100" })
					</p>
					<p>
						<input id="Submit_Comment" type="submit" value="Запостить" />
					</p>
					<input type="hidden" id="NewComment_PostID" value="@Model.Id" />
				</fieldset>
	 }
			<ol class="commentlist">
				@foreach (var item in Model.Comment) {
					<li id="li-comment-@item.Id" class="comment even thread-even depth-1">
						<div id="comment-@item.Id">
							<div class="line">
							</div>
							<img class="avatar avatar-35 photo" width="35" height="35" src="@Url.Content("~/Content/styles/images/usr_logo.jpg")" alt="">
							<div class="comment-author vcard">
								<cite class="fn"><a class="url" rel="external nofollow" 
									href="@Url.Action("Post", new { id = Model.WebLink })/#comment-@item.Id">@item.FirstName</a> </cite><span class="says">says:</span>
							</div>
							<div class="comment-meta commentmetadata">
								<a href="@Url.Action("Post", new { id = Model.WebLink })/#comment-@item.Id">@item.DatePost.ToString()</a>
							</div>
							<div class="comment-body">
								@item.Text
							</div>
							<br />
						</div>
					</li>
		}
			</ol>
		</div>
	</div>
}
